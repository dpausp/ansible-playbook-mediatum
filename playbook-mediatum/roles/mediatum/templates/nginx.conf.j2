# {{ ansible_managed }}
worker_processes  {{ ansible_processor_cores }};
error_log  logs/error.log warn;
pid  logs/nginx.pid;
daemon off;


events {
    worker_connections  1024;
}


http {
    upstream mediatum {
        server localhost:{{ mediatum_port }};
    }


    include  mime.types;
    default_type  application/octet-stream;

    client_max_body_size  55M;
    keepalive_timeout  65;
    sendfile  on;

{% if http_port is defined and http_port %}
    server {
        # HTTP: just redirect to HTTPS
        listen  {{ http_port }};
        server_name  {{ server_name }};
        return  301  https://{{ server_name }}$request_uri;
    }
{% endif %}

    server {
#BASIC settings
        listen  {{ https_port }};
        server_name  {{ server_name }};

        location @backend {
            proxy_pass http://mediatum;
        }
        
        # static files served by nginx first, if not found, try backend
        location ~ /(css|img|js)/ {
            root /srv/mediatum/mediatum/web/;
             try_files $uri @backend;
        }
        # everything else is passed to backend
        location / {
            proxy_pass http://mediatum;
        }

#SSL configuration
        ssl  on;
        include  ssl_params;
        ssl_certificate  {{ ssl_certificate }};
        ssl_certificate_key  {{ ssl_certificate_key }};
        resolver {{ nginx_dns_resolver }};
{% if ssl_trusted_certificate is defined and ssl_trusted_certificate %}
        #ssl_trusted_certificate is used for OCSP stapling and contains the intermediate CA certificates + root CA
        ssl_trusted_certificate  {{ ssl_trusted_certificate }};
{% endif %}

# END SERVER HTTPS
    }
# END HTTP
}

# vim: set filetype=nginx sw=4 ts=4 sts=4 expandtab:
